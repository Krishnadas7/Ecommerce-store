
<%-include('../admin/adminhomeLayouts/admin-header.ejs')%>
<%-include('../admin/adminhomeLayouts/admin-sidebar.ejs')%>
<%-include('../admin/adminhomeLayouts/admin-navbar.ejs')%>


<div class="main-panel">
  <div class="content-wrapper">

<div class="col-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">ADD PRODUCT</h4>
            <!-- <p class="card-description"> Basic form elements </p> -->
            <hr class="white-line">
            <form class="forms-sample" action="/admin/add-product" enctype="multipart/form-data" method="post" id="productForm">
              <div class="form-group row">
                  <div class="col-12 col-md-9 mt-2">
                      <label for="name">Product name</label>
                      <input type="text" class="form-control text-light mb-3" name="name" placeholder="Product name">
                      <div class="error-message" id="name-error"></div>
          
                      <label for="brand">Brand</label>
                      <input type="text" class="form-control text-light mb-3" name="brand" placeholder="Product brand">
                      <div class="error-message" id="brand-error"></div>
          
                      <div class="col-sm-4 my-1">
                          <label for="category">Category</label>
                          <select class="form-control" id="category" name="category">
                              <option value="">Select one</option>
                              <% category.forEach(category => { %>
                              <option value="<%= category._id %>"><%= category.categoryname %></option>
                              <% }); %>
                          </select>
                          <div class="error-message" id="category-error"></div>
                      </div>
          
                      <label for="description">Description</label>
                      <input type="text" class="form-control text-light mb-3" name="description" placeholder="Description">
                      <div class="error-message" id="description-error"></div>
          
                      <label for="price">Price</label>
                      <input type="text" class="form-control text-light mb-3" name="price" placeholder="Price">
                      <div class="error-message" id="price-error"></div>
          
                      <label for="stock">Stock</label>
                      <input type="text" class="form-control text-light mb-3" name="stock" placeholder="Stock">
                      <div class="error-message" id="stock-error"></div>
          
                      <label class="upload__btn ms-3">
                          <p>Upload images</p>
                          <input type="file" id="formFile" name="image" multiple data-max_length="20" class="upload__inputfile">
                      </label>
                      <div class="error-message" id="image-error"></div>
          
                      <button type="submit" class="btn btn-lg btn-inverse-primary mr-2 mt-2">ADD</button>
                  </div>
              </div>
          </form>
  
        </div>
    </div>
  </div>

  

</div>
</div>
    

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const productForm = document.getElementById('productForm');

    productForm.addEventListener('submit', function (event) {
      // Reset previous error messages
      resetErrors();

      // Validate each field
      const name = validateField('name', 'Please enter a product name', 'name-error');
      const brand = validateField('brand', 'Please enter a product brand', 'brand-error');
      const category = validateSelect('category', 'Please select a category', 'category-error');
      const description = validateField('description', 'Please enter a product description', 'description-error');
      const price = validatePositiveNumber('price', 'Please enter a positive number for price', 'price-error');
      const stock = validateField('stock', 'Please enter a stock value', 'stock-error');
      const image = validateFile('formFile', 'Please upload at least one image', 'image-error');

      // If any validation fails, prevent the form submission
      if (!name || !brand || !category || !description || !price || !stock || !image) {
        event.preventDefault();
      }
    });

    // Event listener to hide error message when user starts typing
    const inputFields = document.querySelectorAll('input, select');
    inputFields.forEach((inputField) => {
      inputField.addEventListener('input', function () {
        const errorDiv = document.getElementById(`${inputField.name}-error`);
        errorDiv.textContent = '';
      });
    });

    function validateField(fieldName, errorMessage, errorDivId) {
      const inputField = document.getElementsByName(fieldName)[0];
      const value = inputField.value.trim();

      if (value === '') {
        showError(errorMessage, errorDivId);
        return false;
      }

      return true;
    }

    function validateSelect(fieldName, errorMessage, errorDivId) {
      const selectField = document.getElementsByName(fieldName)[0];
      const value = selectField.value;

      if (value === '') {
        showError(errorMessage, errorDivId);
        return false;
      }

      return true;
    }

    function validatePositiveNumber(fieldName, errorMessage, errorDivId) {
      const inputField = document.getElementsByName(fieldName)[0];
      const value = inputField.value.trim();

      if (value === '' || isNaN(value) || +value <= 0 || /\s/.test(value)) {
        showError(errorMessage, errorDivId);
        return false;
      }

      return true;
    }

    function validateFile(fieldName, errorMessage, errorDivId) {
      const fileInput = document.getElementsByName(fieldName)[0];
      const files = fileInput.files;

      if (files.length === 0) {
        showError(errorMessage, errorDivId);
        return false;
      }

      return true;
    }

    function showError(errorMessage, errorDivId) {
      const errorDiv = document.getElementById(errorDivId);
      errorDiv.textContent = errorMessage;
      errorDiv.style.color = 'red';
    }

    function resetErrors() {
      const errorDivs = document.querySelectorAll('.error-message');
      errorDivs.forEach((errorDiv) => {
        errorDiv.textContent = '';
      });
    }
  });
</script>




  
  

  <%-include('../admin/adminhomeLayouts/admin-footer.ejs')%>