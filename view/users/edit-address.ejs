<%-include('../users/mainLayouts/mainheader.ejs')%>

 <div class="bg0 m-t-23 p-b-140 align-items-center"  style="margin-top: 80px; background-color: gray;" >
    <div class="container  ">

        <form action="" method="post" class="m-5"  onsubmit="return validateForm()">

           <input type="hidden" name="id" value="<%=address._id%>">
            <div class="d-flex " >
                <div class="col-sm-6">
                    <label class="text-white" style="  margin-top: 27px;">Name *</label>
                    <input type="text" id="name" class="form-control w-50 " value="<%=address.name%>"
                        name="name">
                        <p id="nameError" style="color: red;"></p>
                </div>

                <div class="col-sm-6">
                    <label class="text-white"  style="    margin-top: 27px;">email *</label>
                    <input type="text" id="email" class="form-control w-50" name="email"
                        value="<%=address.email%>">
                        <p id="emailError" style="color: red;"></p>
                </div>
            </div>
                 
            <label class="text-white">Mobile *</label>
            <input type="mobile" id="mobile" class="form-control w-50" name="mobile"
                value="<%=address.mobile%>">
                <p id="mobileError" style="color: red;"></p>

                <label class="text-white">House Name *</label>
                <input type="text" id="housename" class="form-control w-50" name="housename" value="<%=address.housename%>">
                <p id="housenameError" style="color: red;"></p>       


                <label class="text-white">City *</label>
                <input type="text" id="city" class="form-control w-50" name="city" style="color: black;" value="<%=address.city%>">
                <p id="cityError" style="color: red;"></p>

                <label class="text-white">State *</label>
                <input type="text" id="state" class="form-control w-50" name="state" value="<%=address.state%>">
                <p id="stateError" style="color: red;"></p>

                 
                <label class="text-white">Pin *</label>
                <input type="text" id="pin" class="form-control w-50" name="pin" value="<%=address.pin%>"> 
                <p id="pinError" style="color: red;"></p>


                <input type="submit" class="btn" value="Update">
                  
        </form>
      


</div>
</div>


    <script>
    document.addEventListener('DOMContentLoaded', function () {
        // Add input event listeners to hide error messages on input
        const inputFields = document.querySelectorAll('.form-control');
        inputFields.forEach(inputField => {
            inputField.addEventListener('input', function () {
                const errorId = inputField.id + 'Error';
                const errorElement = document.getElementById(errorId);
                errorElement.innerHTML = ''; // Clear the error message
            });
        });
    });

    function validateForm() {
        // Reset all error messages
        resetErrors();

        // Flag to track if there are any validation errors
        let hasErrors = false;

        // Example validation for name field
        const nameInput = document.getElementById('name');
        const nameError = document.getElementById('nameError');

        if (!nameInput.value.trim()) {
            nameError.innerHTML = 'Name is required';
            hasErrors = true;
        }

        // Example validation for email field
        const emailInput = document.getElementById('email');
        const emailError = document.getElementById('emailError');

        if (!emailInput.value.trim()) {
            emailError.innerHTML = 'Email is required';
            hasErrors = true;
        }

        // Example validation for mobile field
        const mobileInput = document.getElementById('mobile');
        const mobileError = document.getElementById('mobileError');

        if (!/^[0-9]{10}$/.test(mobileInput.value)) {
            mobileError.innerHTML = 'Mobile should have exactly 10 digits';
            hasErrors = true;
        }

        // Example validation for housename field
        const housenameInput = document.getElementById('housename');
        const housenameError = document.getElementById('housenameError');

        if (!housenameInput.value.trim()) {
            housenameError.innerHTML = 'House Name is required';
            hasErrors = true;
        }

        // Example validation for city field
        const cityInput = document.getElementById('city');
        const cityError = document.getElementById('cityError');

        if (!cityInput.value.trim()) {
            cityError.innerHTML = 'City is required';
            hasErrors = true;
        }

        // Example validation for state field
        const stateInput = document.getElementById('state');
        const stateError = document.getElementById('stateError');

        if (!stateInput.value.trim()) {
            stateError.innerHTML = 'State is required';
            hasErrors = true;
        }

        // Example validation for pin field
        const pinInput = document.getElementById('pin');
        const pinError = document.getElementById('pinError');

        if (!/^[0-9]+$/.test(pinInput.value)) {
            pinError.innerHTML = 'Pin should contain only numbers';
            hasErrors = true;
        }

        // Prevent form submission if there are validation errors
        return !hasErrors;
    }

    // Helper function to reset all error messages
    function resetErrors() {
        const errorElements = document.querySelectorAll('[id$="Error"]');
        errorElements.forEach(errorElement => {
            errorElement.innerHTML = '';
        });
    }
</script>




<%-include('../users/mainLayouts/mainfooter.ejs')%>